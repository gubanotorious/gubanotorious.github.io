(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{144:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return p})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return b})),r.d(t,"default",(function(){return c}));var n=r(1),a=r(6),s=(r(0),r(176)),p={id:"integration-passport",title:"Passport",sidebar_label:"Passport"},i={id:"integration-passport",title:"Passport",description:"The passport endpoints expose all passport and peer-to-peer messaging functionality.\r",source:"@site/docs\\integration-passport.md",permalink:"/docs/integration-passport",sidebar_label:"Passport",sidebar:"gettingStarted",previous:{title:"Bridge REST Integration Microservice",permalink:"/docs/integration"},next:{title:"Claim",permalink:"/docs/integration-claim"}},b=[{value:"GET /passport/id",id:"get-passportid",children:[]},{value:"GET /passport/publicKey",id:"get-passportpublickey",children:[]},{value:"POST /passport/details",id:"post-passportdetails",children:[]},{value:"POST /passport/idfromkey",id:"post-passportidfromkey",children:[]},{value:"POST /passport/sign",id:"post-passportsign",children:[]},{value:"POST /passport/verify",id:"post-passportverify",children:[]},{value:"POST /passport/verifyhash",id:"post-passportverifyhash",children:[]},{value:"POST /passport/encrypt",id:"post-passportencrypt",children:[]},{value:"POST /passport/decrypt",id:"post-passportdecrypt",children:[]},{value:"POST /passport/requestclaimsimport",id:"post-passportrequestclaimsimport",children:[]},{value:"POST /passport/requestauth",id:"post-passportrequestauth",children:[]},{value:"POST /passport/verifyauth",id:"post-passportverifyauth",children:[]},{value:"POST /passport/requestpayment",id:"post-passportrequestpayment",children:[]},{value:"POST /passport/verifypayment",id:"post-passportverifypayment",children:[]}],o={rightToc:b};function c(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},o,r,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"The passport endpoints expose all passport and peer-to-peer messaging functionality."),Object(s.b)("h3",{id:"get-passportid"},"GET /passport/id"),Object(s.b)("p",null,"Retrieves the passport id of the passport context the microservice is running under"),Object(s.b)("hr",null),Object(s.b)("h3",{id:"get-passportpublickey"},"GET /passport/publicKey"),Object(s.b)("p",null,"Retrieves the passport public key of the passport context the microservice is running under"),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportdetails"},"POST /passport/details"),Object(s.b)("p",null,"Retrieves the passport details about a passport by id"),Object(s.b)("h5",{id:"example-request"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "passportId":"d7bc3488073454a6ce32b13a1e8cda6a8bddf16d"\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"passportId")," (string) - the passport to get the details of")),Object(s.b)("h5",{id:"example-response"},"Example Response:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "id":"d7bc3488073454a6ce32b13a1e8cda6a8bddf16d",\n    "isBlacklisted":false,\n    "blacklistReason":null,\n    "isNetworkPartner":true,\n    "isVerificationPartner":true,\n    "partnerName": "Bridge Protocol Corporation",\n    "partnerAddresses": [ \n        "https://*.bridgeprotocol.io"\n    ]\n}\n')),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportidfromkey"},"POST /passport/idfromkey"),Object(s.b)("p",null,"Retrieves the passport id from any passport public key"),Object(s.b)("h5",{id:"example-request-1"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "publicKey":"2d2d2d2d2d424547494e20504750205055424c4943..."\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"publicKey")," (string) - the passport public key to get the passport id from")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportsign"},"POST /passport/sign"),Object(s.b)("p",null,"Signs a message using the private key of the context passport"),Object(s.b)("h5",{id:"example-request-2"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "message":"test message here"\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"message")," (string) - the message to be signed")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportverify"},"POST /passport/verify"),Object(s.b)("p",null,"Verifies that a message signature was signed by the public key"),Object(s.b)("h5",{id:"example-request-3"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "signature":"2d2d2d2d2d424547494e20504750204d4553534147...",\n    "publicKey":"2d2d2d2d2d424547494e20504750205055424c4943..."\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"signature")," (string) - the signature of the message"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"publicKey")," (string) - the public key of the signing passport ")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportverifyhash"},"POST /passport/verifyhash"),Object(s.b)("p",null,"Verifies the SHA256 hash of a message"),Object(s.b)("h5",{id:"example-request-4"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "message":"test message here",\n    "hash":"81041617a8602dd32c003860b91d7677f5706f81b4af9e5e4a9204cb7d80f5b9"\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"message")," (string) - the message to verify"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"hash")," (string) - the hash of the message to verify")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportencrypt"},"POST /passport/encrypt"),Object(s.b)("p",null,"Encrypts a message using the private key of the context passport to be decrypted by the target public key"),Object(s.b)("h5",{id:"example-request-5"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{ \n    "message":"test message here",\n    "publicKey":"2d2d2d2d2d424547494e2050475020505542..."\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"message")," (string) - the message to be encrypted"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"publicKey")," (string) - the passport public key to encrypt the message for")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportdecrypt"},"POST /passport/decrypt"),Object(s.b)("p",null,"Decrypts a message signed and encrypted by the public key using the private key of the context passport."),Object(s.b)("h5",{id:"example-request-6"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "encrypted":"2d2d2d2d2d424547494e20504750204d4553...",\n    "publicKey":"2d2d2d2d2d424547494e2050475020505542..."\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"encrypted")," (string) - the encrypted message"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"publicKey")," (string) - the passport public key of the passport that signed and encrypted the message")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportrequestclaimsimport"},"POST /passport/requestclaimsimport"),Object(s.b)("p",null,"Creates a secure encrypted claims import request for a collection of claims for the target public key"),Object(s.b)("h5",{id:"example-request-7"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "claims":[{\n        "claimTypeId":3,\n        "claimValue":"someuser@bridgeprotocol.io",\n        "createdOn":1551180491,\n        "expiresOn":0\n    }],\n    "publicKey":"2d2d2d2d2d424547494e205047502050..."\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"claims")," (claim[]) - the claims to be signed, encrypted, and included in the claims import request"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"publicKey")," (string) - the public key of the passport to receive the claims import request")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportrequestauth"},"POST /passport/requestauth"),Object(s.b)("p",null,"Creates a signed authentication request "),Object(s.b)("h5",{id:"example-request-8"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "token":"12345",\n    "claimTypes":["3"],\n    "networks":[\n        "neo",\n        "eth"\n    ]\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"token")," (string) - unique token to be included in the response"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"claimTypes")," (string[]) - the claim types to request from the target passport"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"networks")," (string[]) - the networks to request the blockchain addresses of ")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportverifyauth"},"POST /passport/verifyauth"),Object(s.b)("p",null,"Verifies a signed and encrypted authentication response received from a passport"),Object(s.b)("h5",{id:"example-request-9"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "response":"d72216034623462346234623462326433...",\n    "token":"12345"\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"response")," (string) - the authentication response received"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"token")," (string) - the token included in the request used to verify the integrity of the response")),Object(s.b)("h5",{id:"example-response-1"},"Example Response:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "passportId":"fc5fe52784bf7149648d87aa9f17aabff1c68a64",\n    "publicKey":"2d2d2d2d2d424547494e205047502050...",\n    "tokenVerified":true,\n    "claims":[\n        {\n            "claimTypeId":3,\n            "claimValue":"someuser@bridgeprotocol.io",\n            "createdOn":1551180491,\n            "expiresOn":0,\n            "signedByKey":"2d2d2d2d2d424547494e20504750205055424...",\n            "signature":"2d2d2d2d2d424547494e20504750204d4...",\n            "signedById":"d7bc3488073454a6ce32b13a1e8cda6a8bddf16d",\n            "signatureValid":true,\n            "signedByPartner":true\n        }\n    ],\n    "blockchainAddresses":[\n        {\n            "network":"NEO",\n            "address":"AXbopuA5SPv5EVQP5REer4kdwMXpjRC7YQ"\n        },\n        {\n            "network":"ETH",\n            "address":"0x9375d3fb67bedfc27cb6cb9dd73ea8565427ca5b"\n        }\n    ]\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"passportId")," (string) - passport id of the passport that sent the response"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"publicKey")," (string) - public key of the passport that sent the response"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"tokenVerified")," (bool) - whether or not the token in the response was valid"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"claims")," (claim[]) - the claims sent in the response"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"blockchainAddresses")," (address[]) -  the blockchain addresses sent in the response")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportrequestpayment"},"POST /passport/requestpayment"),Object(s.b)("p",null,"Creates a signed BRDG payment request"),Object(s.b)("h5",{id:"example-request-10"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "network":"neo",\n    "amount":1,\n    "address":"AXbopuA5SPv5EVQP5REer4kdwMXpjRC7YQ",\n    "identifier":"12345"\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"network")," (string) - the blockchain network to request payment on"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"amount")," (int) - the amount to request"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"address")," (string) - blockchain address to send the payment to"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"identifier")," (string) - the unique identifier for the transaction")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"post-passportverifypayment"},"POST /passport/verifypayment"),Object(s.b)("p",null,"Verifies a signed and encrypted BRDG payment response and returns the details of the payment"),Object(s.b)("h5",{id:"example-request-11"},"Example Request:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "response":"d72216034623462346234623462326433..."\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"response")," (string) - the payment response message sent by the passport the payment was requested from")),Object(s.b)("h5",{id:"example-response-2"},"Example Response:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "network":"NEO",\n    "from":"AXbopuA5SPv5EVQP5REer4kdwMXpjRC7YQ",\n    "amount":1,\n    "address":"AXbopuA5SPv5EVQP5REer4kdwMXpjRC7YQ",\n    "identifier":"12345",\n    "transactionId":"Transaction12345",\n    "passportId":"fc5fe52784bf7149648d87aa9f17aabff1c68a64"\n}\n')),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"network")," (string) - the blockchain network the payment was sent on"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"from")," (string) - the address the payment was sent from"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"amount")," (int) - the amount that was sent"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"address")," (string) - the address the payment was sent to "),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"identifier")," (string) - the unique identifier of the transaction from the request"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"transactionId")," (string) - the blockchain transaction identifier"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"passportId")," (string) - the passport id of the passport that sent the payment")))}c.isMDXComponent=!0},176:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function b(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=a.a.createContext({}),c=function(e){var t=a.a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i({},t,{},e)),r},l=function(e){var t=c(e.components);return a.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,p=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),l=c(r),u=n,m=l["".concat(p,".").concat(u)]||l[u]||d[u]||s;return r?a.a.createElement(m,i({ref:t},o,{components:r})):a.a.createElement(m,i({ref:t},o))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,p=new Array(s);p[0]=u;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:n,p[1]=i;for(var o=2;o<s;o++)p[o]=r[o];return a.a.createElement.apply(null,p)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);